// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: predict.proto

#include "predict.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tbot {
PROTOBUF_CONSTEXPR PredictRequest::PredictRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.features_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PredictRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PredictRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PredictRequestDefaultTypeInternal() {}
  union {
    PredictRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PredictRequestDefaultTypeInternal _PredictRequest_default_instance_;
PROTOBUF_CONSTEXPR PredictResponse::PredictResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.prediction_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PredictResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PredictResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PredictResponseDefaultTypeInternal() {}
  union {
    PredictResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PredictResponseDefaultTypeInternal _PredictResponse_default_instance_;
}  // namespace tbot
static ::_pb::Metadata file_level_metadata_predict_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_predict_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_predict_2eproto = nullptr;

const uint32_t TableStruct_predict_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbot::PredictRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tbot::PredictRequest, _impl_.features_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbot::PredictResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tbot::PredictResponse, _impl_.prediction_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tbot::PredictRequest)},
  { 7, -1, -1, sizeof(::tbot::PredictResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tbot::_PredictRequest_default_instance_._instance,
  &::tbot::_PredictResponse_default_instance_._instance,
};

const char descriptor_table_protodef_predict_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rpredict.proto\022\004tbot\"\"\n\016PredictRequest\022"
  "\020\n\010features\030\001 \003(\001\"%\n\017PredictResponse\022\022\n\n"
  "prediction\030\001 \001(\0012H\n\016PredictService\0226\n\007Pr"
  "edict\022\024.tbot.PredictRequest\032\025.tbot.Predi"
  "ctResponseb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_predict_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_predict_2eproto = {
    false, false, 178, descriptor_table_protodef_predict_2eproto,
    "predict.proto",
    &descriptor_table_predict_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_predict_2eproto::offsets,
    file_level_metadata_predict_2eproto, file_level_enum_descriptors_predict_2eproto,
    file_level_service_descriptors_predict_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_predict_2eproto_getter() {
  return &descriptor_table_predict_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_predict_2eproto(&descriptor_table_predict_2eproto);
namespace tbot {

// ===================================================================

class PredictRequest::_Internal {
 public:
};

PredictRequest::PredictRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tbot.PredictRequest)
}
PredictRequest::PredictRequest(const PredictRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PredictRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.features_){from._impl_.features_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tbot.PredictRequest)
}

inline void PredictRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.features_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PredictRequest::~PredictRequest() {
  // @@protoc_insertion_point(destructor:tbot.PredictRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PredictRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.features_.~RepeatedField();
}

void PredictRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PredictRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tbot.PredictRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.features_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated double features = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_features(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 9) {
          _internal_add_features(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PredictRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbot.PredictRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double features = 1;
  if (this->_internal_features_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_features(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbot.PredictRequest)
  return target;
}

size_t PredictRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbot.PredictRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double features = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_features_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PredictRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PredictRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PredictRequest::GetClassData() const { return &_class_data_; }


void PredictRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PredictRequest*>(&to_msg);
  auto& from = static_cast<const PredictRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tbot.PredictRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.features_.MergeFrom(from._impl_.features_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PredictRequest::CopyFrom(const PredictRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbot.PredictRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictRequest::IsInitialized() const {
  return true;
}

void PredictRequest::InternalSwap(PredictRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.features_.InternalSwap(&other->_impl_.features_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_predict_2eproto_getter, &descriptor_table_predict_2eproto_once,
      file_level_metadata_predict_2eproto[0]);
}

// ===================================================================

class PredictResponse::_Internal {
 public:
};

PredictResponse::PredictResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tbot.PredictResponse)
}
PredictResponse::PredictResponse(const PredictResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PredictResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.prediction_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.prediction_ = from._impl_.prediction_;
  // @@protoc_insertion_point(copy_constructor:tbot.PredictResponse)
}

inline void PredictResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.prediction_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PredictResponse::~PredictResponse() {
  // @@protoc_insertion_point(destructor:tbot.PredictResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PredictResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PredictResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PredictResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tbot.PredictResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.prediction_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double prediction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.prediction_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PredictResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbot.PredictResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double prediction = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_prediction = this->_internal_prediction();
  uint64_t raw_prediction;
  memcpy(&raw_prediction, &tmp_prediction, sizeof(tmp_prediction));
  if (raw_prediction != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_prediction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbot.PredictResponse)
  return target;
}

size_t PredictResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbot.PredictResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double prediction = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_prediction = this->_internal_prediction();
  uint64_t raw_prediction;
  memcpy(&raw_prediction, &tmp_prediction, sizeof(tmp_prediction));
  if (raw_prediction != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PredictResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PredictResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PredictResponse::GetClassData() const { return &_class_data_; }


void PredictResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PredictResponse*>(&to_msg);
  auto& from = static_cast<const PredictResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tbot.PredictResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_prediction = from._internal_prediction();
  uint64_t raw_prediction;
  memcpy(&raw_prediction, &tmp_prediction, sizeof(tmp_prediction));
  if (raw_prediction != 0) {
    _this->_internal_set_prediction(from._internal_prediction());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PredictResponse::CopyFrom(const PredictResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbot.PredictResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictResponse::IsInitialized() const {
  return true;
}

void PredictResponse::InternalSwap(PredictResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.prediction_, other->_impl_.prediction_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_predict_2eproto_getter, &descriptor_table_predict_2eproto_once,
      file_level_metadata_predict_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tbot
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tbot::PredictRequest*
Arena::CreateMaybeMessage< ::tbot::PredictRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tbot::PredictRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::tbot::PredictResponse*
Arena::CreateMaybeMessage< ::tbot::PredictResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tbot::PredictResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
